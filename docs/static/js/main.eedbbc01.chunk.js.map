{"version":3,"sources":["components/AddCategories.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategories","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","cats","type","value","onChange","target","GifGridItem","id","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","images","downsized_medium","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"6MAGaA,EAAgB,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAGVC,mBAAS,IAHC,mBAGvCC,EAHuC,KAG3BC,EAH2B,KAgB9C,OACI,0BAAMC,SARW,SAAAC,GACjBA,EAAEC,iBACuB,KAAtBJ,EAAWK,QAGdP,GAAe,SAAAQ,GAAI,OAAKN,GAAL,mBAAmBM,SAKlC,2BACIC,KAAK,OACLC,MAAQR,EACRS,SAjBc,SAAAN,GACtBF,EAAcE,EAAEO,OAAOF,YCNlBG,EAAc,SAAC,GAAmB,EAAlBC,GAAmB,IAAhBC,EAAe,EAAfA,MAAMC,EAAS,EAATA,IAElC,OACI,yBAAKC,UAAU,0CACX,yBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,+BAAKA,EAAL,O,uBCPCK,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,4DACJ,mCAELN,EAHS,iDAGuCO,UAAUF,GAHjD,6BACJ,oCADI,SAIIG,MAAMR,GAJV,cAITS,EAJS,gBAKMA,EAAKC,OALX,uBAKRC,EALQ,EAKRA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAM,CACFhB,GAAIgB,EAAIhB,GACRC,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIC,cAAN,aAAE,EAAYC,iBAAiBhB,QAX3B,kBAeZY,GAfY,4CAAH,sDCiCLK,EA5BC,SAAC,GAAgB,IAAfZ,EAAc,EAAdA,SAAc,ECHJ,SAAEA,GAAe,IAAD,EAEdpB,mBAAS,CAC/B0B,KAAM,GACNO,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAqBxC,OAdAC,qBAAU,WAENjB,EAAQC,GACHiB,MAAM,SAAAC,GAECH,EAAS,CACLT,KAAMY,EACNL,SAAS,SAK1B,CAACb,IAEGc,EDhBuBK,CAAanB,GAA/BU,EAFgB,EAErBJ,KAAYO,EAFS,EAETA,QAEnB,OACI,oCACCA,GAAW,uBAAGjB,UAAU,yCAAb,WACZ,yBAAKA,UAAU,aACX,wBAAIA,UAAU,0CAA0CI,GAGhDU,EAAOF,KAAK,SAAAC,GAAG,OACX,kBAAC,EAAD,eACIW,IAAKX,EAAIhB,IACLgB,UEgBjBY,EA9BM,WAAM,MAGazC,mBAAS,CAAC,UAHvB,mBAGhB0C,EAHgB,KAGJ3C,EAHI,KAQvB,OACI,oCACI,4CACA,kBAAC,EAAD,CAAeA,cAAeA,IAC9B,6BACA,4BAEI2C,EAAWd,KAAK,SAACR,GAAD,OACZ,kBAAC,EAAD,CACIA,SAAUA,EACVoB,IAAKpB,QAMjB,+BCxBZuB,IAASC,OAEL,kBAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.eedbbc01.chunk.js","sourcesContent":["import React,{useState} from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategories = ({setCategories}) => {\r\n\r\n\r\n    const [inputValue, setinputValue] = useState('');\r\n\r\n    const handleInputChange = e =>{\r\n        setinputValue(e.target.value); \r\n    }\r\n\r\n    const handleSubmit = e =>{\r\n        e.preventDefault();\r\n        if(inputValue.trim() === ''){\r\n            return\r\n        }\r\n        setCategories( cats => [inputValue,...cats]);\r\n    }\r\n    return (\r\n        <form onSubmit={handleSubmit}>  \r\n\r\n            <input \r\n                type=\"text\"\r\n                value={ inputValue }\r\n                onChange={ handleInputChange }\r\n            />\r\n            \r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategories.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","\r\nimport React from 'react'\r\n\r\nexport const GifGridItem = ({id,title,url}) => {\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__bounce\">\r\n            <img src={url} alt={title}/>\r\n            <p> {title} </p>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","\r\nexport const getGifs = async( category ) => {\r\n    const apiKey = 'JZpJDZLXSoQD9mejpQUOP2oBhpuxOIMb';\r\n\r\n        const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=${apiKey}`;\r\n        const resp = await fetch(url);\r\n        const {data} = await resp.json();\r\n        \r\n        const gifs = data.map( img => {\r\n            return{\r\n                id: img.id,\r\n                title: img.title,\r\n                url: img.images?.downsized_medium.url\r\n            }\r\n        });\r\n\r\n    return gifs;\r\n}","import React/*, { useState,useEffect }*/ from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { GifGridItem } from './GifGridItem';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n\r\n\r\nconst GifGrid = ({category}) => {\r\n    \r\n    const {data:images,loading} = useFetchGifs(category);\r\n    \r\n    return (\r\n        <>\r\n        {loading && <p className=\"card animate__animated animate__flash\">Loading</p>}\r\n        <div className=\"card-grid\">  \r\n            <h3 className=\"card animate__animated animate__bounce\">{category}</h3>\r\n            \r\n                {\r\n                    images.map( img => (\r\n                        <GifGridItem\r\n                            key={img.id}\r\n                            {...img}\r\n                        />\r\n                    ))\r\n                }\r\n            \r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nGifGrid.propTypes = {\r\n    category: PropTypes.string.isRequired\r\n}\r\n\r\nexport default GifGrid\r\n","import { useState,useEffect } from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n    \r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n        \r\n        getGifs(category)\r\n            .then( imgs =>{\r\n\r\n                    setstate({\r\n                        data: imgs,\r\n                        loading: false\r\n                    })\r\n                \r\n            })\r\n\r\n    }, [category]);\r\n\r\n    return state;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","\r\nimport React,{useState} from 'react';\r\n\r\nimport { AddCategories } from './components/AddCategories';\r\nimport GifGrid from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    //const categorias = ['OnePuch','Samurai X','DragonBall'];\r\n    const [categories, setCategories] = useState(['memes']);\r\n\r\n    // const handleAdd = () => setcategories([...categories,'naruto']);\r\n\r\n    \r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategories setCategories={setCategories}/>\r\n            <hr/>\r\n            <ul>\r\n            {\r\n                categories.map( (category) => (\r\n                    <GifGrid \r\n                        category={category}\r\n                        key={category}\r\n                    />\r\n                    )   \r\n                )\r\n            }\r\n            </ul>\r\n            <hr/>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default GifExpertApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './GifExpertApp';\n\n\nReactDOM.render(\n  \n    <GifExpertApp/>\n  ,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}